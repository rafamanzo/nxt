#define COLOR Sensor(IN_1)
#define BLUE 30
#define RED 58
#define COLOR_ERROR 4
#define BASE_SPEED 30


int SPEED;
int LEFT;

sub rotate180()
{
    OnRevReg(OUT_A,75, OUT_REGMODE_SPEED);
    OnFwdReg(OUT_B,75, OUT_REGMODE_SPEED);
    Wait(750);
    Off(OUT_AB);
}

sub rotate_dir(){
    RotateMotor(OUT_B,75, 520);
    Wait(1300);
    Off(OUT_AB);
}

sub rotate_esq(){
    RotateMotor(OUT_A,75, 520);
    Wait(1300);
    Off(OUT_AB);
}

sub backward(){
   OnRevReg(OUT_AB,SPEED*2,OUT_REGMODE_SPEED);
   Wait(900);
   Off(OUT_AB);
}


sub hit_left()
{
RotateMotor(OUT_C,85,-110);
}

sub hit_right()
{
RotateMotor(OUT_C,85,110);
}

task launcher(){
  int color = 0;

  while(TRUE){
    color = COLOR;
    ClearScreen();
    NumOut(30,4, color);


    if(color > RED )
    {
    SPEED = BASE_SPEED/2;
    if(LEFT) hit_left();
    else if(!LEFT) hit_right();
    }
    /*
    if(color > BLUE -3 && color < BLUE + 3)
    {
      SPEED = 20;
      hit_right();
    }
    else if(color > RED - 3 && color < RED + 3)
    {
      SPEED = 20;
      hit_left();
    }*/
    Wait(1000);
  }
  SPEED = BASE_SPEED;
}

task colector(){
  while(TRUE){
    OnFwdReg(OUT_AB, SPEED,OUT_REGMODE_SPEED);
    if(Sensor(IN_2))
    {
      Off(OUT_AB);
      backward();
      rotate180();
      LEFT = !LEFT;
      Off(OUT_AB);
    }
  }
}

task main(){
  LEFT = 1;
  SPEED = BASE_SPEED;
  SetSensorLight(IN_1);
  SetSensorTouch(IN_2);
  Precedes( colector, launcher);
  
}
